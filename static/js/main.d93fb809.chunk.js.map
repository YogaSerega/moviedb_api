{"version":3,"sources":["redux/types/types.ts","redux/actions/actions.ts","components/MovieCard/MovieCard.tsx","components/EmptyList/EmptyList.tsx","components/MovieList/MovieList.tsx","components/Details/style.ts","components/Details/details.tsx","components/SearchBar/SearchBar.tsx","components/buttons/buttons.tsx","components/Header/header.tsx","components/About/about.tsx","App.tsx","redux/reducer/reducer.ts","constants/constants.ts","api/api.ts","redux/sagas/sagas.ts","redux/store/store.ts","reportWebVitals.ts","index.tsx"],"names":["UserActionTypes","changeIsLoading","payload","type","LOADING","setFetchedMovies","SET_MOVIES","MovieCard","movie","dispatch","useDispatch","poster","Poster","title","Title","year","Year","id","imdbID","className","src","alt","moviecard","onClick","FETCH_ID","console","log","to","pathname","EmptyList","MovieList","content","defaultState","useSelector","state","undefined","stateStore","movies","length","map","index","Wrapper","styled","Container","MovieInfo","Modal","div","MovieTopInfo","MovieImage","MovieLeftInfo","Col","Detail","movieData","movieDetail","Runtime","Released","Director","Actors","Plot","Awards","BoxOffice","Ratings","Genre","Country","Rated","Writer","Language","Row","md","sm","xs","SearchBar","placeholder","onChange","event","searchValue","target","value","SEARCH_MOVIE","FETCH_MOVIES","Buttons","moviesFromState","sort","a","b","SORT_MOVIES","Header","About","App","path","render","initialState","nameSearched","isFetchMovies","loading","movieID","BASE_URL","searchItem","isLoading","getMovieResult","getMovieDetail","handleError","error","response","data","status","headers","request","message","config","search","axios","get","catch","res","fetchMovieList","showLoadingGUIElement","setSortMovies","FetchMovieDetaiByID","requestMovieWatcher","put","select","nameSearch","call","Search","FETCH_MOVIE","takeEvery","SagaMiddleware","createSagaMiddleware","reducers","combineReducers","action","IS_FETCH_MOVIES","store","createStore","composeWithDevTools","applyMiddleware","getState","run","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d93fb809.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { stStore } from '../store/store';\r\n\r\nexport interface IRating {\r\n  Source?: string;\r\n  Value?: string;\r\n}\r\nexport interface IMovieData {\r\n  Title?: string;\r\n  Year?: string;\r\n  imdbID?: string;\r\n  Rated?: string;\r\n  Released?: string;\r\n  Runtime?: string;\r\n  Genre?: string;\r\n  Director?: string;\r\n  Writer?: string;\r\n  Actors?: string;\r\n  Plot?: string;\r\n  Language?: string;\r\n  Country?: string;\r\n  Awards?: string;\r\n  Poster?: string;\r\n  Ratings?: IRating[];\r\n  Metascore?: string;\r\n  imdbRating?: string;\r\n  imdbVotes?: string;\r\n  Type?: string;\r\n  DVD?: string;\r\n  BoxOffice?: string;\r\n  Production?: string;\r\n  Website?: string;\r\n}\r\n\r\nexport type InitialType = {\r\n  nameSearched: string;\r\n  isFetchMovies:boolean;\r\n  movies: IMovieData[];\r\n  loading: boolean;\r\n  movieID: string;\r\n  movieDetail: IMovieData;\r\n};\r\n\r\nexport type TypeOfDefaultState = typeof stStore;\r\n\r\nexport enum UserActionTypes {\r\n  SEARCH_MOVIE = 'SEARCH_MOVIE',\r\n  IS_FETCH_MOVIES = 'IS_FETCH_MOVIES',\r\n  SET_MOVIES = 'SET_MOVIES',\r\n  SORT_MOVIES = 'SORT_MOVIES',\r\n  FETCH_MOVIES = 'FETCH_MOVIES',\r\n  FETCH_MOVIE = 'FETCH_MOVIE',\r\n  LOADING = 'LOADING',\r\n  FETCH_ID = 'FETCH_ID'\r\n}\r\n\r\nexport type ActionTypes =\r\n  |sortMovies\r\n  | searchMovie\r\n  | isFetchMovies\r\n  | fetchMovies\r\n  | setMovies\r\n  | fetchMovieDetail\r\n  | loading\r\n  | fetchID // Типы действий:1получить набранный фильм,сделать запрос+сетстэйт,\r\n\r\nexport type searchMovie = {\r\n  type: UserActionTypes.SEARCH_MOVIE;\r\n  payload: string;\r\n};\r\nexport type isFetchMovies = {\r\n  type: UserActionTypes.IS_FETCH_MOVIES;\r\n  payload: boolean;\r\n};\r\n\r\nexport type fetchMovies = {\r\n  type: UserActionTypes.FETCH_MOVIES;\r\n  payload: boolean;\r\n};\r\nexport type fetchID = {\r\n  type: UserActionTypes.FETCH_ID;\r\n  payload: string;\r\n};\r\nexport type setMovies = {\r\n  type: UserActionTypes.SET_MOVIES;\r\n  payload: Array<IMovieData>;\r\n};\r\n\r\nexport type fetchMovieDetail = {\r\n  type: UserActionTypes.FETCH_MOVIE;\r\n  payload:IMovieData;\r\n};\r\n\r\nexport type loading = {\r\n  type: UserActionTypes.LOADING;\r\n  payload: boolean;\r\n};\r\nexport type sortMovies = {\r\n  type: UserActionTypes.SORT_MOVIES;\r\n  payload:Array<IMovieData> ;\r\n};\r\n","import {\r\n  loading,\r\n  UserActionTypes,\r\n  searchMovie,\r\n  fetchMovies,\r\n  setMovies,\r\n  isFetchMovies,\r\n  IMovieData,\r\n  sortMovies,\r\n  fetchMovieDetail,\r\n  fetchID,\r\n} from '../types/types';\r\n\r\nexport const searchMovieFromSB = (payload:string)\r\n:searchMovie => ({\r\n  type: UserActionTypes.SEARCH_MOVIE,\r\n  payload,\r\n});\r\nexport const changeIsLoading = (payload:boolean)\r\n:loading => ({\r\n  type: UserActionTypes.LOADING,\r\n  payload,\r\n});\r\nexport const isFetchData = (payload:boolean)\r\n:isFetchMovies => ({\r\n  type: UserActionTypes.IS_FETCH_MOVIES,\r\n  payload,\r\n});\r\n\r\nexport const fetchAllMovies = (payload:boolean)\r\n:fetchMovies => ({\r\n  type: UserActionTypes.FETCH_MOVIES,\r\n  payload,\r\n});\r\n\r\nexport const setFetchedMovies = (payload:Array<IMovieData>)\r\n:setMovies => ({\r\n  type: UserActionTypes.SET_MOVIES,\r\n  payload,\r\n});\r\nexport const setSortMovies = (payload:Array<IMovieData>)\r\n:sortMovies => ({\r\n  type: UserActionTypes.SORT_MOVIES,\r\n  payload,\r\n});\r\nexport const fetchDetailMovie = (payload:IMovieData)\r\n:fetchMovieDetail => ({\r\n  type: UserActionTypes.FETCH_MOVIE,\r\n  payload,\r\n});\r\nexport const fetchMovieID = (payload:string)\r\n:fetchID => ({\r\n  type: UserActionTypes.FETCH_ID,\r\n  payload,\r\n});\r\n","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable no-lone-blocks */\r\n/* eslint-disable max-len */\r\n/* eslint-disable no-console */\r\nimport { useDispatch } from 'react-redux';\r\nimport React, { Dispatch } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchMovieID } from '../../redux/actions/actions';\r\nimport {\r\n  searchMovie,\r\n  isFetchMovies,\r\n  loading,\r\n  fetchMovies,\r\n  fetchMovieDetail,\r\n  fetchID,\r\n  IMovieData,\r\n} from '../../redux/types/types';\r\n\r\nexport interface MovieCardComponentProps {\r\n  movie: IMovieData;\r\n}\r\n\r\nfunction MovieCard({ movie }: MovieCardComponentProps): React.ReactElement {\r\n  const dispatch = useDispatch<\r\n      Dispatch<\r\n        | searchMovie\r\n        | isFetchMovies\r\n        | loading\r\n        | fetchMovies\r\n        | fetchMovieDetail\r\n        | fetchID\r\n      >\r\n    >();\r\n  const poster = movie ? movie.Poster : '';\r\n  const title = movie ? movie.Title : 'undefined';\r\n  const year = movie ? movie.Year : 'undefined';\r\n  const id = movie ? movie.imdbID : 'undefined';\r\n  const clickModalOpen = (): void => {\r\n    dispatch(fetchMovieID(id || ''));\r\n    console.log(id);\r\n  };\r\n  return (\r\n    <div className=\"wrapperCard\">\r\n      <div className=\"card card-body bg-dark text-center h-100\">\r\n        <img className=\"imgPoster\" src={poster} alt=\"Movie Cover\" />\r\n        <h5 className=\"text-light card-title\">\r\n          {title}\r\n          {' '}\r\n          {year}\r\n        </h5>\r\n        <Link\r\n          className=\"button\"\r\n          moviecard={movie}\r\n          onClick={clickModalOpen}\r\n          to={{\r\n            pathname: `/details/${movie.imdbID}`,\r\n          }}\r\n        >\r\n          Details\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// }\r\n\r\nexport default MovieCard;\r\n","import React from 'react';\r\n\r\nfunction EmptyList(): React.ReactElement {\r\n  return (\r\n    <div>\r\n      <h3>введите название фильма</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyList;\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-console */\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { IMovieData, TypeOfDefaultState } from '../../redux/types/types';\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport EmptyList from '../EmptyList/EmptyList';\r\n\r\nfunction MovieList(): React.ReactElement {\r\n  const defaultState = useSelector(\r\n    (state:TypeOfDefaultState) => state,\r\n  );// TODO указать тип для стор\r\n  // movie.stateStore\r\n  let content;\r\n  if (defaultState.stateStore!.movies === undefined) {\r\n    return (<EmptyList />);\r\n  }\r\n  content = defaultState.stateStore!.movies.length > 0\r\n    ? defaultState.stateStore!\r\n      .movies.map((moviecard:IMovieData, index:number) => (\r\n\r\n        <div className=\"movieCard\" key={index}>\r\n          <MovieCard movie={moviecard} />\r\n        </div>\r\n\r\n      ))\r\n    : null;\r\n  return (\r\n    <div className=\"container\">\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import styled from 'styled-components';\r\nimport { Container, Col, Modal } from 'reactstrap';\r\n\r\nexport const Wrapper = styled(Container)`\r\n  h1 {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const ModalStyled = styled(Modal)``;\r\n\r\nexport const MovieInfo = styled.div`\r\n  flex: 4;\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const MovieTopInfo = styled.div`\r\n  font-size: 13px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const MovieImage = styled.div`\r\n  flex: 1;\r\n  height: 300px;\r\n  margin: auto 0;\r\n  margin-right: 20px;\r\n  margin-bottom: 20px;\r\n  img {\r\n    height: 300px;\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const MovieLeftInfo = styled(Col)`\r\n  @media (max-width: 1200px) {\r\n    max-width: 100% !important;\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable no-unneeded-ternary */\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col } from 'reactstrap';\r\nimport { IMovieData } from '../../redux/types/types';\r\nimport {\r\n  MovieImage,\r\n  MovieInfo,\r\n  MovieLeftInfo,\r\n  MovieTopInfo,\r\n  Wrapper,\r\n} from './style';\r\n\r\nfunction Detail(): React.ReactElement {\r\n  const defaultState: any = useSelector(\r\n    (state) => state,\r\n  ); // TODO ЗАТИПИЗИРОВАТЬ СТЭЕЙТ\r\n  const movieData = defaultState.stateStore.movieDetail;\r\n\r\n  const {\r\n    Poster,\r\n    Title,\r\n    Year,\r\n    Runtime,\r\n    Released,\r\n    Director,\r\n    Actors,\r\n    Plot,\r\n    Awards,\r\n    Ratings = [], // TODO разобраться почему по индексу нелья получить RATING\r\n    BoxOffice,\r\n    Genre,\r\n    Country,\r\n    Rated,\r\n    Writer,\r\n    Language,\r\n  }: IMovieData = movieData;\r\n  return (\r\n    <Wrapper>\r\n      <Row>\r\n        <Col>\r\n          <h1>\r\n            {Title}\r\n            {' '}\r\n            {Year && `(${Year})`}\r\n          </h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <MovieLeftInfo md={3} sm={6} xs=\"12\">\r\n          <MovieTopInfo>\r\n            {Rated}\r\n            {' '}\r\n            | Genre:\r\n            {Genre}\r\n            {' '}\r\n            | Duration:\r\n            {Runtime}\r\n            {' '}\r\n            |\r\n            {Released}\r\n\r\n          </MovieTopInfo>\r\n          <MovieImage>\r\n            <img src={Poster} alt=\"N/A\" />\r\n          </MovieImage>\r\n        </MovieLeftInfo>\r\n        <Col md={9} sm={6} xs=\"12\">\r\n          <MovieInfo>\r\n            <p>\r\n              <span>Director:</span>\r\n              {' '}\r\n              {Director}\r\n            </p>\r\n            <p>\r\n              <span>Writer:</span>\r\n              {' '}\r\n              {Writer}\r\n            </p>\r\n            <p>\r\n              <span>Actors:</span>\r\n              {' '}\r\n              {Actors}\r\n            </p>\r\n            <p>\r\n              <span>Plot:</span>\r\n              {' '}\r\n              {Plot}\r\n            </p>\r\n            <p>\r\n              <span>Awards:</span>\r\n              {' '}\r\n              {Awards}\r\n            </p>\r\n            <p>\r\n              <span>Country:</span>\r\n              {' '}\r\n              {Country}\r\n            </p>\r\n            <p>\r\n              <span>Box Office:</span>\r\n              {' '}\r\n              {BoxOffice}\r\n            </p>\r\n            <p>\r\n              <span>Language:</span>\r\n              {' '}\r\n              {Language}\r\n            </p>\r\n          </MovieInfo>\r\n        </Col>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React, { ChangeEvent, Dispatch } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  searchMovieFromSB,\r\n  fetchAllMovies,\r\n} from '../../redux/actions/actions';\r\nimport {\r\n  searchMovie, isFetchMovies, loading, fetchMovies,\r\n} from '../../redux/types/types';\r\n\r\nfunction SearchBar(): React.ReactElement {\r\n  const dispatch = useDispatch<Dispatch<\r\n  searchMovie\r\n  |isFetchMovies\r\n  |loading\r\n  |fetchMovies>>();\r\n  // TODO вынести отдельно диспатч, он используется в нескольких местах\r\n  const onChangeHandler = (event: ChangeEvent<HTMLInputElement>): string => {\r\n    const searchValue: string = event.target.value;\r\n    dispatch(searchMovieFromSB(searchValue));\r\n    return searchValue;\r\n  };\r\n\r\n  const onClickSearch = ():void => {\r\n    dispatch(fetchAllMovies(true));\r\n  };\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <input\r\n        className=\"inputSearch\"\r\n        placeholder=\"Search...\"\r\n        type=\"text\"\r\n        onChange={onChangeHandler}\r\n      />\r\n\r\n      <Link\r\n        to={{\r\n\r\n          pathname: '/movieList/',\r\n\r\n        }}\r\n        type=\"submit\"\r\n        className=\"button\"\r\n        id=\"search\"\r\n        onClick={onClickSearch}\r\n      >\r\n        {' '}\r\n\r\n        Search\r\n      </Link>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { Dispatch } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  setSortMovies,\r\n} from '../../redux/actions/actions';\r\nimport {\r\n  searchMovie,\r\n  isFetchMovies,\r\n  loading,\r\n  fetchMovies,\r\n  sortMovies,\r\n  setMovies,\r\n  IMovieData,\r\n} from '../../redux/types/types';\r\n\r\nfunction Buttons(): React.ReactElement {\r\n  const dispatch = useDispatch<Dispatch<\r\n  searchMovie\r\n  |isFetchMovies\r\n  |loading\r\n  |fetchMovies\r\n  |sortMovies\r\n  |setMovies>>();\r\n  const defaultState: any = useSelector((state) => state);\r\n  // TODO type default import state ??\r\n  const moviesFromState:Array<IMovieData> = defaultState.stateStore.movies;\r\n\r\n  const onClickSortBtn = ():void => {\r\n    dispatch(setSortMovies(\r\n      moviesFromState.sort((a:any, b:any) => a.Year - b.Year),\r\n    ));\r\n  };\r\n  return (\r\n    <div className=\"buttons\">\r\n\r\n      <Link\r\n        id=\"sort\"\r\n        className=\"button\"\r\n        type=\"submit\"\r\n        onClick={onClickSortBtn}\r\n        to={{ pathname: '/movieList' }}\r\n      >\r\n        Sort by Year\r\n      </Link>\r\n      <Link\r\n        id=\"about\"\r\n        className=\"button\"\r\n        type=\"submit\"\r\n        to={{ pathname: '/about' }}\r\n      >\r\n        About\r\n      </Link>\r\n      <Link\r\n        id=\"home\"\r\n        className=\"button\"\r\n        type=\"submit\"\r\n        to={{ pathname: '/' }}\r\n\r\n      >\r\n        Home\r\n      </Link>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport Buttons from '../buttons/buttons';\r\n\r\nexport default function Header(): React.ReactElement {\r\n  return (\r\n\r\n    <div className=\"header\">\r\n      <SearchBar />\r\n      <Buttons />\r\n      <h3>MOVIEDB</h3>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction About(): React.ReactElement {\r\n  return (\r\n    <div>\r\n      <h1>Welcome, my name is Sergey</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n        Nostrum mollitia dolorem possimus porro distinctio ab tenetur\r\n        molestiae eligendi esse, necessitatibus officia autem similique\r\n        consectetur beatae. Possimus et ratione esse aliquid ab enim\r\n        modi qui itaque facere, asperiores architecto assumenda\r\n        perferendis dolorum placeat sequi commodi cumque illum\r\n        aperiam ex, corrupti sunt recusandae quasi labore sit!\r\n        Quasi hic esse rem sapiente, eum itaque. Obcaecati\r\n        officiis temporibus repudiandae aspernatur,\r\n        ipsa necessitatibus dignissimos! Perferendis\r\n        ipsam eaque illo corporis adipisci\r\n        quod voluptatum molestiae, a rem veritatis\r\n        odio vitae eveniet ullam nemo deleniti quam cupiditate dolores\r\n        fugit! Iure aliquid alias soluta inventore explicabo?\r\n        Id, aliquid deserunt?\r\n\r\n      </p>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default About;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport MovieList from './components/MovieList/MovieList';\r\nimport Details from './components/Details/details';\r\nimport './App.css';\r\nimport Header from './components/Header/header';\r\nimport About from './components/About/about';\r\n\r\nexport default function App(): React.ReactElement {\r\n  return (\r\n    <>\r\n\r\n      <Route path=\"/\" render={() => <Header />} />\r\n      <Route path=\"/about\" render={() => <About />} />\r\n      <Route path=\"/movieList\" render={() => <MovieList />} />\r\n      <Route path=\"/details/:id?\" render={() => <Details />} />\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  UserActionTypes,\r\n  ActionTypes,\r\n  IMovieData,\r\n  InitialType,\r\n} from '../types/types';\r\n\r\nconst initialState = {\r\n  nameSearched: '',\r\n  isFetchMovies: false,\r\n  movies: [] as Array<IMovieData>,\r\n  loading: false,\r\n  movieID: '',\r\n  movieDetail: {} as IMovieData,\r\n};\r\n\r\nexport const reducer = (\r\n  state: InitialType = initialState,\r\n  action: ActionTypes,\r\n): InitialType | undefined => {\r\n  switch (action.type) {\r\n    case UserActionTypes.SEARCH_MOVIE:\r\n      return { ...state, nameSearched: action.payload };\r\n    case UserActionTypes.SET_MOVIES:\r\n      return { ...state, movies: action.payload };\r\n    case UserActionTypes.IS_FETCH_MOVIES:\r\n      return { ...state, isFetchMovies: action.payload };\r\n    case UserActionTypes.SORT_MOVIES:\r\n      return { ...state, movies: action.payload };\r\n    case UserActionTypes.FETCH_ID:\r\n      return { ...state, movieID: action.payload };\r\n\r\n    case UserActionTypes.FETCH_MOVIE:\r\n      return { ...state, movieDetail: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { TypeOfDefaultState, IMovieData } from '../redux/types/types';\r\n\r\nexport const API_KEY = '4435bc0e';\r\nexport const BASE_URL = `http://www.omdbapi.com/?apikey=${API_KEY}`;\r\n\r\nexport const searchItem = (\r\n  state:TypeOfDefaultState,\r\n):string => state.stateStore!.nameSearched;\r\nexport const isLoading = (\r\n  state:TypeOfDefaultState,\r\n):boolean => state.stateStore!.loading;\r\nexport const movies = (\r\n  state:TypeOfDefaultState,\r\n):Array<IMovieData> => state.stateStore!.movies;\r\nexport const id = (\r\n  state:TypeOfDefaultState,\r\n):string => state.stateStore!.movieID;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable camelcase */\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { BASE_URL } from '../constants/constants';\r\n\r\nfunction handleError(error): void { // TODO в хелперы перенести\r\n  if (error.response) {\r\n    console.log(error.response.data);\r\n    console.log(error.response.status);\r\n    console.log(error.response.headers);\r\n  } else if (error.request) {\r\n    console.log(error.request);\r\n  } else {\r\n    console.log('Error', error.message);\r\n  }\r\n  console.log(error.config);\r\n}\r\n\r\nexport function* getMovieResult(search: string): Generator {\r\n  const res = yield axios.get(`${BASE_URL}&s=${search}`).catch(handleError);\r\n  return res;\r\n}\r\n\r\nexport function* getMovieDetail(id: string): Generator {\r\n  const res = yield axios.get(`${BASE_URL}&i=${id}`).catch(handleError);\r\n  return res;\r\n}\r\nexport type ApType = ReturnType<typeof getMovieResult>;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nimport {\r\n  put, call, takeEvery, select,\r\n} from 'redux-saga/effects';\r\n\r\nimport { getMovieResult, getMovieDetail } from '../../api/api';\r\nimport {\r\n  changeIsLoading,\r\n  setFetchedMovies,\r\n  fetchDetailMovie,\r\n} from '../actions/actions';\r\nimport { UserActionTypes } from '../types/types';\r\nimport {\r\n  searchItem, isLoading, movies, id,\r\n} from '../../constants/constants';\r\n\r\nexport function* fetchMovieList() { // TODO SAGA TYPE\r\n  yield put(changeIsLoading(true));\r\n  const nameSearch = yield select(searchItem);\r\n  const res = yield call(() => getMovieResult(nameSearch));\r\n  if (res) {\r\n    yield put(setFetchedMovies(res.data.Search));\r\n  }\r\n  yield put(changeIsLoading(false));\r\n}\r\n\r\nexport function* showLoadingGUIElement() { // TODO SAGA TYPE LOADING SHOW ?????\r\n  const loading = yield select(isLoading);\r\n}\r\nexport function* setSortMovies() { // TODO SAGA TYPE\r\n  const moviesFromState = yield select(movies);\r\n  yield put(setFetchedMovies(moviesFromState.sort((a, b) => a.Year - b.Year)));\r\n}\r\nexport function* FetchMovieDetaiByID() { // TODO SAGA TYPE\r\n  yield put(changeIsLoading(true));\r\n  const movieID = yield select(id);\r\n  const res = yield call(() => getMovieDetail(movieID));\r\n  yield put(fetchDetailMovie(res.data));\r\n  yield put(changeIsLoading(false));\r\n}\r\nexport function* requestMovieWatcher() { // TODO SAGA TYPE\r\n  yield takeEvery(UserActionTypes.FETCH_MOVIES, fetchMovieList);\r\n  yield takeEvery(UserActionTypes.SORT_MOVIES, setSortMovies);\r\n  yield takeEvery(UserActionTypes.LOADING, showLoadingGUIElement);\r\n  yield takeEvery(UserActionTypes.FETCH_ID, FetchMovieDetaiByID);\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { reducer } from '../reducer/reducer';\r\nimport { requestMovieWatcher } from '../sagas/sagas';\r\n\r\nconst SagaMiddleware = createSagaMiddleware();\r\nconst reducers = combineReducers({\r\n  stateStore: reducer,\r\n});\r\nexport const store = createStore(\r\n  reducers, composeWithDevTools(applyMiddleware(SagaMiddleware)),\r\n);\r\nexport const stStore = store.getState();\r\nSagaMiddleware.run(requestMovieWatcher);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport { store } from './redux/store/store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './App.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n\r\n  </Provider>,\r\n\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}